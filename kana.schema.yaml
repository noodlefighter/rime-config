# Rime schema
# vim: set sw=2 sts=2 et:
# encoding: utf-8

schema:
  schema_id: kana
  name: 假名
  version: "2014.05.19"
  author:
    - polyhedron <polyhedron@gmail.com>
    - foodgen <chen.sst@gmail.com>
  description: |
    假名輸入，小寫假名用x前導
    用大寫字母輸入片假名

switches:
  - name: ascii_mode
    reset: 0
    states: [ 假名, 西文 ]
  - name: half_shape
    states: [ 半角, 全角 ]
    reset: 0

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
  filters:
    - uniquifier

menu:
  page_size: 1

speller:
  alphabet: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_'
  delimiter: " '"
  algebra:
    - derive/q/x/
    - derive/Q/X/
    - derive/r/l/
    - derive/R/L/
    - derive/si/shi/
    - derive/SI/SHI/
    - derive/sy([aueo])/sh$1/
    - derive/SY([AUEO])/SH$1/
    - derive/^zi/ji/
    - derive/^ZI/JI/
    - derive/zzi/jji/
    - derive/ZZI/JJI/
    - derive/^zy([aueo])/j$1/
    - derive/^ZY([AUEO])/J$1/
    - derive/zzy([aueo])/jj$1/
    - derive/ZZY([AUEO])/JJ$1/
    - derive/tu/tsu/
    - derive/TU/TSU/
    - derive/du/dzu/
    - derive/DU/DZU/
    - derive/ti/chi/
    - derive/TI/CHI/
    - derive/tti/cchi/
    - derive/TTI/CCHI/
    - derive/ty([aueo])/ch$1/
    - derive/TY([AUEO])/CH$1/
    - derive/tty([aueo])/cch$1/
    - derive/TTY([AUEO])/CCH$1/
    - derive/^hu/fu/
    - derive/^HU/FU/
    - derive/hhu/ffu/
    - derive/HHU/FFU/
    - derive/^n$/nn/
    - derive/^N$/NN/
    - fuzz/^n$/m/
    - fuzz/^N$/M/
    - fuzz/^xtu$/t/
    - fuzz/^XTU$/T/
    - derive/^-$/_/

translator:
  dictionary: kana
  strict_spelling: true

punctuator:
  import_preset: default
  full_shape: &symbols
    '.': {commit: 。 }
    ',': {commit: 、 }
    '/': ・
    '=': [ ゝ, ゞ ]
    '+': [ ヽ, ヾ ]
  half_shape: *symbols

key_binder:
  import_preset: default
  bindings:
    - { when: has_menu, accept: minus, send: minus }
    - { when: has_menu, accept: equal, send: equal }
    - { when: paging, accept: comma, send: comma }
    - { when: has_menu, accept: period, send: period }

recognizer:
  import_preset: default

ascii_composer:
  switch_key:
    Caps_Lock: noop
    Eisu_toggle: clear
